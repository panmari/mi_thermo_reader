// Mocks generated by Mockito 5.4.5 from annotations
// in mi_thermo_reader/test/device_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:typed_data' as _i6;

import 'package:flutter_blue_plus/flutter_blue_plus.dart' as _i3;
import 'package:flutter_blue_plus_platform_interface/flutter_blue_plus_platform_interface.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:shared_preferences/src/shared_preferences_async.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDeviceIdentifier_0 extends _i1.SmartFake
    implements _i2.DeviceIdentifier {
  _FakeDeviceIdentifier_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BluetoothDevice].
///
/// See the documentation for Mockito's code generation for more information.
class MockBluetoothDevice extends _i1.Mock implements _i3.BluetoothDevice {
  @override
  _i2.DeviceIdentifier get remoteId =>
      (super.noSuchMethod(
            Invocation.getter(#remoteId),
            returnValue: _FakeDeviceIdentifier_0(
              this,
              Invocation.getter(#remoteId),
            ),
            returnValueForMissingStub: _FakeDeviceIdentifier_0(
              this,
              Invocation.getter(#remoteId),
            ),
          )
          as _i2.DeviceIdentifier);

  @override
  String get platformName =>
      (super.noSuchMethod(
            Invocation.getter(#platformName),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#platformName),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#platformName),
            ),
          )
          as String);

  @override
  String get advName =>
      (super.noSuchMethod(
            Invocation.getter(#advName),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#advName),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#advName),
            ),
          )
          as String);

  @override
  List<_i3.BluetoothService> get servicesList =>
      (super.noSuchMethod(
            Invocation.getter(#servicesList),
            returnValue: <_i3.BluetoothService>[],
            returnValueForMissingStub: <_i3.BluetoothService>[],
          )
          as List<_i3.BluetoothService>);

  @override
  bool get isAutoConnectEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isAutoConnectEnabled),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isDisconnected =>
      (super.noSuchMethod(
            Invocation.getter(#isDisconnected),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i5.Stream<_i3.BluetoothConnectionState> get connectionState =>
      (super.noSuchMethod(
            Invocation.getter(#connectionState),
            returnValue: _i5.Stream<_i3.BluetoothConnectionState>.empty(),
            returnValueForMissingStub:
                _i5.Stream<_i3.BluetoothConnectionState>.empty(),
          )
          as _i5.Stream<_i3.BluetoothConnectionState>);

  @override
  int get mtuNow =>
      (super.noSuchMethod(
            Invocation.getter(#mtuNow),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  _i5.Stream<int> get mtu =>
      (super.noSuchMethod(
            Invocation.getter(#mtu),
            returnValue: _i5.Stream<int>.empty(),
            returnValueForMissingStub: _i5.Stream<int>.empty(),
          )
          as _i5.Stream<int>);

  @override
  _i5.Stream<void> get onServicesReset =>
      (super.noSuchMethod(
            Invocation.getter(#onServicesReset),
            returnValue: _i5.Stream<void>.empty(),
            returnValueForMissingStub: _i5.Stream<void>.empty(),
          )
          as _i5.Stream<void>);

  @override
  _i5.Stream<_i3.BluetoothBondState> get bondState =>
      (super.noSuchMethod(
            Invocation.getter(#bondState),
            returnValue: _i5.Stream<_i3.BluetoothBondState>.empty(),
            returnValueForMissingStub:
                _i5.Stream<_i3.BluetoothBondState>.empty(),
          )
          as _i5.Stream<_i3.BluetoothBondState>);

  @override
  _i5.Stream<bool> get isDiscoveringServices =>
      (super.noSuchMethod(
            Invocation.getter(#isDiscoveringServices),
            returnValue: _i5.Stream<bool>.empty(),
            returnValueForMissingStub: _i5.Stream<bool>.empty(),
          )
          as _i5.Stream<bool>);

  @override
  _i2.DeviceIdentifier get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _FakeDeviceIdentifier_0(this, Invocation.getter(#id)),
            returnValueForMissingStub: _FakeDeviceIdentifier_0(
              this,
              Invocation.getter(#id),
            ),
          )
          as _i2.DeviceIdentifier);

  @override
  String get localName =>
      (super.noSuchMethod(
            Invocation.getter(#localName),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#localName),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#localName),
            ),
          )
          as String);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i4.dummyValue<String>(this, Invocation.getter(#name)),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  _i5.Stream<_i3.BluetoothConnectionState> get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i5.Stream<_i3.BluetoothConnectionState>.empty(),
            returnValueForMissingStub:
                _i5.Stream<_i3.BluetoothConnectionState>.empty(),
          )
          as _i5.Stream<_i3.BluetoothConnectionState>);

  @override
  _i5.Stream<List<_i3.BluetoothService>> get servicesStream =>
      (super.noSuchMethod(
            Invocation.getter(#servicesStream),
            returnValue: _i5.Stream<List<_i3.BluetoothService>>.empty(),
            returnValueForMissingStub:
                _i5.Stream<List<_i3.BluetoothService>>.empty(),
          )
          as _i5.Stream<List<_i3.BluetoothService>>);

  @override
  _i5.Stream<List<_i3.BluetoothService>> get services =>
      (super.noSuchMethod(
            Invocation.getter(#services),
            returnValue: _i5.Stream<List<_i3.BluetoothService>>.empty(),
            returnValueForMissingStub:
                _i5.Stream<List<_i3.BluetoothService>>.empty(),
          )
          as _i5.Stream<List<_i3.BluetoothService>>);

  @override
  void cancelWhenDisconnected(
    _i5.StreamSubscription<dynamic>? subscription, {
    bool? next = false,
    bool? delayed = false,
  }) => super.noSuchMethod(
    Invocation.method(
      #cancelWhenDisconnected,
      [subscription],
      {#next: next, #delayed: delayed},
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> connect({
    Duration? timeout = const Duration(seconds: 35),
    int? mtu = 512,
    bool? autoConnect = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#connect, [], {
              #timeout: timeout,
              #mtu: mtu,
              #autoConnect: autoConnect,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> disconnect({
    int? timeout = 35,
    bool? queue = true,
    int? androidDelay = 2000,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#disconnect, [], {
              #timeout: timeout,
              #queue: queue,
              #androidDelay: androidDelay,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.BluetoothService>> discoverServices({
    bool? subscribeToServicesChanged = true,
    int? timeout = 15,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#discoverServices, [], {
              #subscribeToServicesChanged: subscribeToServicesChanged,
              #timeout: timeout,
            }),
            returnValue: _i5.Future<List<_i3.BluetoothService>>.value(
              <_i3.BluetoothService>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<_i3.BluetoothService>>.value(
                  <_i3.BluetoothService>[],
                ),
          )
          as _i5.Future<List<_i3.BluetoothService>>);

  @override
  _i5.Future<int> readRssi({int? timeout = 15}) =>
      (super.noSuchMethod(
            Invocation.method(#readRssi, [], {#timeout: timeout}),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> requestMtu(
    int? desiredMtu, {
    double? predelay = 0.35,
    int? timeout = 15,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestMtu,
              [desiredMtu],
              {#predelay: predelay, #timeout: timeout},
            ),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> requestConnectionPriority({
    required _i3.ConnectionPriority? connectionPriorityRequest,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#requestConnectionPriority, [], {
              #connectionPriorityRequest: connectionPriorityRequest,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setPreferredPhy({
    required int? txPhy,
    required int? rxPhy,
    required _i3.PhyCoding? option,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setPreferredPhy, [], {
              #txPhy: txPhy,
              #rxPhy: rxPhy,
              #option: option,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> createBond({int? timeout = 90, _i6.Uint8List? pin}) =>
      (super.noSuchMethod(
            Invocation.method(#createBond, [], {#timeout: timeout, #pin: pin}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeBond({int? timeout = 30}) =>
      (super.noSuchMethod(
            Invocation.method(#removeBond, [], {#timeout: timeout}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> clearGattCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearGattCache, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> pair() =>
      (super.noSuchMethod(
            Invocation.method(#pair, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [SharedPreferencesWithCache].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockSharedPreferencesWithCache extends _i1.Mock
    implements _i7.SharedPreferencesWithCache {
  @override
  Set<String> get keys =>
      (super.noSuchMethod(
            Invocation.getter(#keys),
            returnValue: <String>{},
            returnValueForMissingStub: <String>{},
          )
          as Set<String>);

  @override
  _i5.Future<void> reloadCache() =>
      (super.noSuchMethod(
            Invocation.method(#reloadCache, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#get, [key]),
            returnValueForMissingStub: null,
          )
          as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getBool, [key]),
            returnValueForMissingStub: null,
          )
          as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getInt, [key]),
            returnValueForMissingStub: null,
          )
          as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getDouble, [key]),
            returnValueForMissingStub: null,
          )
          as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getString, [key]),
            returnValueForMissingStub: null,
          )
          as String?);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getStringList, [key]),
            returnValueForMissingStub: null,
          )
          as List<String>?);

  @override
  _i5.Future<void> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
